<%# user row %>

<div class = "dashboard">
<div class = "row-fluid">

  <%#
  Make everything but the header a partial and render that based on how many panels one has
  user.panels.each do |f|
  end 
  %>

<%# dash-header %>

<h1 style="text-align:left"><b>98Lumens solar panel dashboard</b></h1>
    <div class= "span2" id="user-pic">
      <p>
        <%= image_tag avatar_url(@user), :size =>"85x90"%>
      </p>
    </div>

    <div class="span3" id="user-name">
        <p class="lead" id="name-text">
          <div class="twitter-update"><h4 style="float:left;padding-right:10px;"><%= @user.name %></h4>
</div>
        </p>
        <% if !@user.energy_data.empty? %>
        <p style="font-size:16px;padding-top:5px;">
          Location of solar panel: <b><%= @location %></b>
        </p>
        <% end %>
    </div>

    <% if !@user.energy_data.empty? %>
    <div id="weather">
      <%= @location %>
      <%= @weather %>
    </div>
    <% end %>

    <% if @user.energy_data.empty? %>
      <p style="font-size:16px">
        <%= link_to "Learn how you can go solar and activate this dashboard", consult_path, :class=>"btn btn-success btn-large dash-btn" %>
      </p>
    <% end %>

</div>

<%# --------------- %>

<% if !@user.energy_data.empty? %>

<div class="current_production"></div>
  <!-- chart and highlight row -->
<div class="row-fluid">
        <p>
          <div class="btn-group  pull-right" data-toggle="buttons-radio">
            <button type="button" class="btn" id="day">Today</button>
            <button type="button" class="btn" id="month" >Last 30 days</button>
            <button type="button" class="btn" id="year">This year</button>
          </div>
        <p>
</div>
<div class="row-fluid">
          <div class="span3">
            <div class="power-output">
              <div id='chart_div' style="padding-left:17px"></div>
              
              <div class='summary-banner'>
                <div class="summary-highlight">
                  Lifetime output 
                  <div class="hover-question" title="Over the lifetime of your panel, it has produced the amount of energy below measured in kilowatt-hours, the most common measure of electricity in the United States." style="float:right">
                    <%= image_tag "question_mark.png", :size=>"13x13" %>
                  </div>
                </div>
              </div>

              <div class="highlight-text"><%= number_to_human(@user.calculate_overall_power_for, :precision =>2, :units => {:unit => 'Wh', :thousand => 'kWh', :million => 'MWh'}) %></div>
              
              <div class='summary-banner'>
                <div class="summary-highlight">
                  Lifetime earning 
                  <div class="hover-question" title="This is the total payback that your panel has produced since you bought it." style="float:right">
                    <%= image_tag "question_mark.png", :size=>"13x13" %>
                  </div>
                </div>
              </div>

              <div class="highlight-text">$<%= number_to_human(@user.calculate_overall_money_for, :precision => 4) %></div>

              <div class='summary-banner'>
                <div class="summary-highlight">
                  Trees planted (<%=  number_to_human(@user.calculate_overall_trees_for, :precision => 4) %>) 
                  <div class="hover-question" title="Trees capture approximately 12.5 kg of carbon dioxide per year." style="float:right">
                    <%= image_tag "question_mark.png", :size=>"13x13" %>
                  </div>
                </div>
              </div>

              <div class="tree-count">
                <div class="highlight-text">
                  <% for i in 1..@user.calculate_overall_trees_for %>
                    <%= image_tag "tree.png", :size=>"20x20" %>
                  <% end %>
                </div>
              </div>

              <div class='summary-banner'>
                <div class="summary-highlight">
                  Cars taken off road (<%=  number_to_human(@user.calculate_overall_cars_for, :precision => 2) %>) 
                  <div class="hover-question" style="float:right" title="Cars produce on average 4200 kg of carbon dioxide a year.">
                    <%= image_tag "question_mark.png", :size=>"13x13" %>
                  </div>
                </div>
              </div>

              <div class="highlight-text">
                <% for i in 1..@user.calculate_overall_cars_for %>
                  <%= image_tag "car.png", :size=>"20x20" %>
                <% end %>
              </div>
              
            </div>
          </div>
          <div class="span9">
            <div id="year-graph" style="width:100%;height:500px;"></div>
          </div>
  </div>

  <div class="row-fluid">

  </div>

<% end %>

</div>


<% javascript_tag do %>
 
<% end %>

<script type="text/javascript">
$(document).ready($(function () {
    /*****************************************
    * Globals
    ******************************************/
    var placeholder = $("#year-graph");
    var flag = 0;

    //set it off
     main();

    /*****************************************
    * Main functions
    ******************************************/
    function main () {
        plot_graphs();
        //plot_google();
        real_time_update();
    }
     //start real time update of solar output

    /*****************************************
    * Misc
    ******************************************/

      // divs that are tooltippable
    $('#sun-hl').tooltip();
    $('#dollar-hl').tooltip();
    $('#green-hl').tooltip();
    $('.hover-question').tooltip();

    var url = "http://www.98lumens.com"
    var todays_power = <%= @user.last_day_power.to_json %>
    var text = "My%20solar%20panel%20generated%20"+ todays_power[1].toFixed(2) + "%20kWh%20of%20clean,%20renewable%20energy%20today!";
    var path_to_twitter = "http://www.twitter.com/intent/tweet?url="+url+"&text="+text+"&via=98Lumens"

    $('.twitter-update').append('<a href='+path_to_twitter+'><button class="btn btn-mini"><%= image_tag("icons/twitter.png", :size=>"15x15") %>Tweet</button></a>');

    /*****************************************
    * Graphing (Google)
    ******************************************/
      google.setOnLoadCallback(drawChart);

      function drawChart(solar_output) {
        var data = google.visualization.arrayToDataTable([
          ['Label', 'Value'],
          ['Energy', solar_output],
        ]);

        var formatter = new google.visualization.NumberFormat(
        {fractionDigits:2, suffix: ' Wh'});
        formatter.format(data, 1); // Apply formatter to second column

        var options = {
          width: 200, height: 300,
          //redFrom: 90, redTo: 100,
          //yellowFrom:75, yellowTo: 90,
          minorTicks: 5,
          max: 220,
          animation: {
            duration: 400,
          }
        };

        var chart = new google.visualization.Gauge(document.getElementById('chart_div'));
        chart.draw(data, options);
      }
    /*****************************************
    * Graphing (Flot)
    ******************************************/

    function plot_graphs(){
      // draw canvas
      function doThis(flag) {
        if (flag) {
          $.plot(placeholder,[{label: "Solar output (Wh)", data: data}], options);
        }
        else{
          $.plot(placeholder,[{label: "Solar output (kWh)", data: data}], options);
        }
      } 

     var xyData = <%= @monthTotals.to_json %>;

     var data = xyData;
     var options = {
          //lines: {show:true},
          points: {show:false},
          legend: {position: 'ne',
          },
          bars: {show:true,
            align: "center",
            barWidth: 21*(24 * 60 * 60 * 1000),
            lineWidth:0,
            fillColor: "rgba(68, 177, 217, 0.75)"}, //#*day
          xaxis: {
            mode: "time",
            timeformat: "%b",
            monthNames: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
            tickLength:0,
          },
          grid: {hoverable:true, 
                clickable:true, 
                autohighlight:true},
          yaxis: {
            show:true,
            tickLength:0
          },
        };

        // first plot
        doThis();

        //button listeners
      $('#day').click(function(){
        flag = 1;
        data = switchProf(0);
        options.lines = {show: true,
                        fillColor: "rgba(68, 177, 217, 0.75)"};
        options.bars.barWidth = 0.03*(24 * 60 * 60 * 1000);
        options.xaxis = {mode: "time", twelveHourClock: true, tickLength: 0};

        doThis(flag);
      });

      $('#month').click(function(){
        flag = 0;
        data = switchProf(1);
        options.bars.show = true;
        options.lines.show = false;
        options.bars.barWidth = 0.8*(24 * 60 * 60 * 1000);
        options.xaxis.timeformat = "%b-%d";
        options.xaxis.dayNames = ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"];

        doThis();
      });

      $('#year').click(function(){
        flag = 0;

        data = switchProf(2);
        options.bars.barWidth = 21*(24 * 60 * 60 * 1000);
        options.bars.show = true;
        options.lines.show = false;
        options.xaxis.timeformat = "%b";
        options.xaxis.monthNames = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];

        doThis();
      });

      //function to switch on button press
      function switchProf(timeGran) {
        var dataReturn = [];
          switch (timeGran) {
            case 0:    //day
              dataReturn = <%= @dayTotals.to_json %>
              break;
            case 1:    //month
              dataReturn = <%= @weekTotals.to_json %>
              break;
            case 2:    //year
              dataReturn = <%= @monthTotals.to_json %>
              break;
          }

          return dataReturn;
      }
    }

   /*****************************************
    * Event listeners
    *****************************************/

  // hovering over the plot

    function showTooltip(x, y, contents) {
        $('<div id="tooltip">' + contents + '</div>').css( {
            position: 'absolute',
            display: 'none',
            top: y - 30,
            left: x + 5,
            border: '1px solid black',
            padding: '2px',
            'background-color': 'black',
            'color': 'white',
            opacity: 0.80
        }).appendTo("body").fadeIn(200);
    }

    placeholder.bind("plothover", function (event, pos, item) {
          if (item) {
              if (previousPoint != item.dataIndex) {
                  previousPoint = item.dataIndex;
                  
                  $("#tooltip").remove();
                  var x = item.datapoint[0].toFixed(2),
                      y = item.datapoint[1].toFixed(2);
                  
                  if (flag==0){
                    showTooltip(item.pageX, item.pageY,
                              y + " kWh");
                  }
                  else {
                    showTooltip(item.pageX, item.pageY,
                              y + " Wh");
                  }
              }
          }
          else {
              $("#tooltip").remove();
              previousPoint = null;            
          }
    });

   /*****************************************
    * "Real time" updates
    *****************************************/

    function real_time_update(){
      setTimeout(real_time_update,5000);
      var time = Math.round(((new Date()).getTime())/1000);

      var targetURL = "get/user_data?time_now="+time+"&user_id="+<%= @user.id %>;
      // first call to get data right now

      var power_before = 0;
      var power_after = 0;

      $.get(targetURL, function(data){
        power_before = data.before[0].power;
        power_after = data.after[0].power;

        // after getting data before and after, find increment between them, delta-naught
        var delta = power_after - power_before;

        // scale before power by a percentage based on how much time has elapsed since last hour
        var current_time = new Date();
        var minutes_passed = (current_time.getMinutes())*60;
        var seconds_passed = minutes_passed + (current_time.getSeconds());
        var percent_hour = seconds_passed/3600;

        //calculate increment
        var delta_change = delta*percent_hour;

        console.log("Before it was "+power_before+", now it is "+power_after+" with increments of "+delta_change)

        //add to power_before and update html component
        var power_update = power_before + delta_change;
        //$('.power-output').append('<p>'+power_update.toFixed(3)+'</p>');
        drawChart(power_update);
      })
    }

}));
</script>